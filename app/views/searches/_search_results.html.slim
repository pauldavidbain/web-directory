- if current_user.blank? && in_private_scope
  .alert.alert-info
    = fa_icon 'lock'
    span<> Not everyone in the directory is public. Please
    = link_to 'login', params.merge(login: 'true')
    span< to see more results.


- if params[:_type] == 'person' && (params[:affiliation] == 'faculty' || (params[:q].blank? && params[:affiliation] == nil))
  .callout-box Looking for the #{link_to('Faculty A-Z Page', faculty_index_url)}?


/ Don't show sort options on the department and group pages.
- unless params[:_type] == 'department' || params[:_type] == 'group'
  .sort_options.pull-right
    = ' Sort by '
    span.dropdown
      = link_to("#{selected_sort(params[:_type])} #{fa_icon('caret-down')}".html_safe, "#", "data-toggle"=>"dropdown")
      ul.dropdown-menu.pull-right role="menu" aria-labelledby="dLabel"
        - sort_options(params[:_type]).each do |option|
          li role="presentation" = link_to option[:title], params.merge(sort: option[:param], page: nil)

/ Don't show filter options on the department and group pages.
- unless params[:_type] == 'department' || params[:_type] == 'group'
  .sort_options.pull-right
    span.dropdown
      = link_to("#{params[:affiliation].try(:titleize).presence || 'Filter'} #{fa_icon('caret-down')}".html_safe, "#", "data-toggle"=>"dropdown")
      ul.dropdown-menu.pull-right role="menu" aria-labelledby="dLabel"
        - if params[:affiliation].present?
          li role="presentation" = link_to "All", params.merge(affiliation: nil)
        - UserPermissables.new(current_user).affiliations.map(&:to_s).sort.each do |affl|
          - unless affl == params[:affiliation]
            li role="presentation" = link_to affl.titleize, params.merge(affiliation: affl, page: nil)

- if @results_count > 0
  p.results_count Showing #{currently_showing(@results_count)} #{@results_count} #{'result'.pluralize(@results_count)}
- else
  p.results_count There are no results matching your search

- @results.each_with_index do |es_result, index|
  = render 'search_result', search_result: result_object(es_result), index: index

ul.pager
  - if previous_page.present?
    li.previous = link_to 'Previous', params.merge(page: previous_page)
  - if next_page(@pages_count).present?
    li.next = link_to 'Next', params.merge(page: next_page(@pages_count))
